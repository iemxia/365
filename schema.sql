create table
  public.capacity (
    id integer generated by default as identity,
    ml_capacity integer null default 10000,
    potion_capacity integer null default 50,
    constraint capacity_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.carts (
    cart_id integer generated by default as identity,
    total_potions_bought integer not null default 0,
    total_cost integer not null default 0,
    customer_class text null,
    timestamp timestamp with time zone null default now(),
    customer_name text null default ''::text,
    constraint carts_pkey primary key (cart_id),
    constraint carts_cart_id_key unique (cart_id)
  ) tablespace pg_default;

create table
  public.potions (
    potion_sku text not null,
    price integer null,
    id integer not null,
    potion_type integer[] null,
    constraint potions_pkey primary key (id),
    constraint potions_id_key unique (id),
    constraint potions_potion_type_key unique (potion_type)
  ) tablespace pg_default;

create table
  public.overall_transactions (
    id integer generated by default as identity,
    created_at timestamp with time zone not null default now(),
    description text null,
    type text null,
    constraint overall_transactions_pkey primary key (id),
    constraint overall_transactions_id_key unique (id)
  ) tablespace pg_default;

create table
  public.cart_items (
    cart_id integer generated by default as identity,
    potion_id integer not null default 0,
    quantity integer not null default 0,
    gold_cost integer not null default 0,
    time_stamp timestamp with time zone null default now(),
    constraint cart_items_pkey primary key (cart_id, potion_id),
    constraint public_cart_items_cart_id_fkey foreign key (cart_id) references carts (cart_id) on update restrict on delete restrict,
    constraint public_cart_items_potion_sku_fkey foreign key (potion_id) references potions (id) on update restrict on delete restrict
  ) tablespace pg_default;

create table
  public.gold_ledger_entries (
    id integer generated by default as identity,
    transaction_id integer null,
    gold_change integer not null default 0,
    constraint gold_ledger_entries_pkey primary key (id),
    constraint gold_ledger_entries_id_key unique (id),
    constraint gold_ledger_entries_transaction_id_fkey foreign key (transaction_id) references overall_transactions (id) on update restrict on delete cascade
  ) tablespace pg_default;

create view
  public.gold_total as
select
  sum(gold_ledger_entries.gold_change) as gold
from
  gold_ledger_entries;

create table
  public.ml_ledger_entries (
    id bigint generated by default as identity,
    green_change integer null default 0,
    blue_change integer null default 0,
    red_change integer null default 0,
    dark_change integer null default 0,
    transaction_id integer null,
    constraint ml_ledger_entries_pkey primary key (id),
    constraint ml_ledger_entries_transaction_id_fkey foreign key (transaction_id) references overall_transactions (id) on update restrict on delete cascade
  ) tablespace pg_default;

create view
  public.ml_inventory as
select
  sum(ml_ledger_entries.green_change) as "green mL",
  sum(ml_ledger_entries.blue_change) as "blue mL",
  sum(ml_ledger_entries.red_change) as "red mL",
  sum(ml_ledger_entries.dark_change) as "dark mL"
from
  ml_ledger_entries;

create table
  public.potions_ledger_entries (
    id integer generated by default as identity,
    transaction_id integer null,
    potion_id integer not null,
    quantity_change integer null default 0,
    constraint potions_ledger_entries_pkey primary key (id),
    constraint potions_ledger_entries_id_key unique (id),
    constraint potions_ledger_entries_potion_id_fkey foreign key (potion_id) references potions (id) on update restrict on delete restrict,
    constraint potions_ledger_entries_transaction_id_fkey foreign key (transaction_id) references overall_transactions (id) on update restrict on delete cascade
  ) tablespace pg_default;

create table
  public.processed (
    job_id integer generated by default as identity,
    type text not null,
    constraint processed_pkey primary key (
      job_id,
      type
    )
  ) tablespace pg_default;

create view
  public.potion_quantity_view as
select
  p.potion_sku,
  sum(pl.quantity_change) as total_quantity
from
  potions_ledger_entries pl
  join potions p on pl.potion_id = p.id
group by
  p.potion_sku;